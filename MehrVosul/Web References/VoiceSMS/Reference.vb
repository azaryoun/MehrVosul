'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace VoiceSMS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="RahyabVoiceSendSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class RahyabVoiceSend
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private AuthenticationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadVoiceFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InquiryFileNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendVoiceSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendVoiceSMS_MinuteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendVoiceSMS_BulkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StatusVoiceSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StatusVoiceSMS_DetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRemainVoiceCreditOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendPollVoiceSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StatusPollVoiceSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendMixedVoiceSMS_SynchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendVoiceSMS_MehrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RefundWarrantyCreditOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PaymentVoiceBillOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DecodeTextOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.MehrVosul.My.MySettings.Default.MehrVosul_VoiceSMS_RahyabVoiceSend
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AuthenticationCompleted As AuthenticationCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadVoiceFileCompleted As UploadVoiceFileCompletedEventHandler
        
        '''<remarks/>
        Public Event InquiryFileNameCompleted As InquiryFileNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SendVoiceSMSCompleted As SendVoiceSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendVoiceSMS_MinuteCompleted As SendVoiceSMS_MinuteCompletedEventHandler
        
        '''<remarks/>
        Public Event SendVoiceSMS_BulkCompleted As SendVoiceSMS_BulkCompletedEventHandler
        
        '''<remarks/>
        Public Event StatusVoiceSMSCompleted As StatusVoiceSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event StatusVoiceSMS_DetailsCompleted As StatusVoiceSMS_DetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRemainVoiceCreditCompleted As GetRemainVoiceCreditCompletedEventHandler
        
        '''<remarks/>
        Public Event SendPollVoiceSMSCompleted As SendPollVoiceSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event StatusPollVoiceSMSCompleted As StatusPollVoiceSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendMixedVoiceSMS_SynchCompleted As SendMixedVoiceSMS_SynchCompletedEventHandler
        
        '''<remarks/>
        Public Event SendVoiceSMS_MehrCompleted As SendVoiceSMS_MehrCompletedEventHandler
        
        '''<remarks/>
        Public Event RefundWarrantyCreditCompleted As RefundWarrantyCreditCompletedEventHandler
        
        '''<remarks/>
        Public Event PaymentVoiceBillCompleted As PaymentVoiceBillCompletedEventHandler
        
        '''<remarks/>
        Public Event DecodeTextCompleted As DecodeTextCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Authentication", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Authentication(ByVal strUsername As String, ByVal strPassword As String, ByRef strMessage As String) As Boolean
            Dim results() As Object = Me.Invoke("Authentication", New Object() {strUsername, strPassword, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthenticationAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strMessage As String)
            Me.AuthenticationAsync(strUsername, strPassword, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticationAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strMessage As String, ByVal userState As Object)
            If (Me.AuthenticationOperationCompleted Is Nothing) Then
                Me.AuthenticationOperationCompleted = AddressOf Me.OnAuthenticationOperationCompleted
            End If
            Me.InvokeAsync("Authentication", New Object() {strUsername, strPassword, strMessage}, Me.AuthenticationOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticationOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticationCompleted(Me, New AuthenticationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadVoiceFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadVoiceFile(ByVal strUsername As String, ByVal strPassword As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal fileBytes() As Byte, ByVal strFileName As String, ByVal fileExt As String, ByVal fileDuration As Integer, ByVal fileSize As Double, ByRef strMessage As String) As Integer
            Dim results() As Object = Me.Invoke("UploadVoiceFile", New Object() {strUsername, strPassword, fileBytes, strFileName, fileExt, fileDuration, fileSize, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadVoiceFileAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal fileBytes() As Byte, ByVal strFileName As String, ByVal fileExt As String, ByVal fileDuration As Integer, ByVal fileSize As Double, ByVal strMessage As String)
            Me.UploadVoiceFileAsync(strUsername, strPassword, fileBytes, strFileName, fileExt, fileDuration, fileSize, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadVoiceFileAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal fileBytes() As Byte, ByVal strFileName As String, ByVal fileExt As String, ByVal fileDuration As Integer, ByVal fileSize As Double, ByVal strMessage As String, ByVal userState As Object)
            If (Me.UploadVoiceFileOperationCompleted Is Nothing) Then
                Me.UploadVoiceFileOperationCompleted = AddressOf Me.OnUploadVoiceFileOperationCompleted
            End If
            Me.InvokeAsync("UploadVoiceFile", New Object() {strUsername, strPassword, fileBytes, strFileName, fileExt, fileDuration, fileSize, strMessage}, Me.UploadVoiceFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadVoiceFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadVoiceFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadVoiceFileCompleted(Me, New UploadVoiceFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InquiryFileName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InquiryFileName(ByVal strUsername As String, ByVal strPassword As String, ByVal strFileName As String, ByRef strMessage As String) As Integer
            Dim results() As Object = Me.Invoke("InquiryFileName", New Object() {strUsername, strPassword, strFileName, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InquiryFileNameAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strFileName As String, ByVal strMessage As String)
            Me.InquiryFileNameAsync(strUsername, strPassword, strFileName, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InquiryFileNameAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strFileName As String, ByVal strMessage As String, ByVal userState As Object)
            If (Me.InquiryFileNameOperationCompleted Is Nothing) Then
                Me.InquiryFileNameOperationCompleted = AddressOf Me.OnInquiryFileNameOperationCompleted
            End If
            Me.InvokeAsync("InquiryFileName", New Object() {strUsername, strPassword, strFileName, strMessage}, Me.InquiryFileNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnInquiryFileNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.InquiryFileNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InquiryFileNameCompleted(Me, New InquiryFileNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoiceSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendVoiceSMS(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByRef strMessage As String) As Integer
            Dim results() As Object = Me.Invoke("SendVoiceSMS", New Object() {strUsername, strPassword, strName, arrDest, intVoiceID, repeatTotal, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendVoiceSMSAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByVal strMessage As String)
            Me.SendVoiceSMSAsync(strUsername, strPassword, strName, arrDest, intVoiceID, repeatTotal, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendVoiceSMSAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.SendVoiceSMSOperationCompleted Is Nothing) Then
                Me.SendVoiceSMSOperationCompleted = AddressOf Me.OnSendVoiceSMSOperationCompleted
            End If
            Me.InvokeAsync("SendVoiceSMS", New Object() {strUsername, strPassword, strName, arrDest, intVoiceID, repeatTotal, strMessage}, Me.SendVoiceSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendVoiceSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendVoiceSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendVoiceSMSCompleted(Me, New SendVoiceSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoiceSMS_Minute", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendVoiceSMS_Minute(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByRef strMessage As String) As Integer
            Dim results() As Object = Me.Invoke("SendVoiceSMS_Minute", New Object() {strUsername, strPassword, strName, arrDest, intVoiceID, repeatTotal, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendVoiceSMS_MinuteAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByVal strMessage As String)
            Me.SendVoiceSMS_MinuteAsync(strUsername, strPassword, strName, arrDest, intVoiceID, repeatTotal, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendVoiceSMS_MinuteAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.SendVoiceSMS_MinuteOperationCompleted Is Nothing) Then
                Me.SendVoiceSMS_MinuteOperationCompleted = AddressOf Me.OnSendVoiceSMS_MinuteOperationCompleted
            End If
            Me.InvokeAsync("SendVoiceSMS_Minute", New Object() {strUsername, strPassword, strName, arrDest, intVoiceID, repeatTotal, strMessage}, Me.SendVoiceSMS_MinuteOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendVoiceSMS_MinuteOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendVoiceSMS_MinuteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendVoiceSMS_MinuteCompleted(Me, New SendVoiceSMS_MinuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoiceSMS_Bulk", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendVoiceSMS_Bulk(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByRef strMessage As String) As Integer
            Dim results() As Object = Me.Invoke("SendVoiceSMS_Bulk", New Object() {strUsername, strPassword, strName, arrDest, intVoiceID, repeatTotal, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendVoiceSMS_BulkAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByVal strMessage As String)
            Me.SendVoiceSMS_BulkAsync(strUsername, strPassword, strName, arrDest, intVoiceID, repeatTotal, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendVoiceSMS_BulkAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.SendVoiceSMS_BulkOperationCompleted Is Nothing) Then
                Me.SendVoiceSMS_BulkOperationCompleted = AddressOf Me.OnSendVoiceSMS_BulkOperationCompleted
            End If
            Me.InvokeAsync("SendVoiceSMS_Bulk", New Object() {strUsername, strPassword, strName, arrDest, intVoiceID, repeatTotal, strMessage}, Me.SendVoiceSMS_BulkOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendVoiceSMS_BulkOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendVoiceSMS_BulkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendVoiceSMS_BulkCompleted(Me, New SendVoiceSMS_BulkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StatusVoiceSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StatusVoiceSMS(ByVal strUsername As String, ByVal strPassword As String, ByVal intVoiceSMSID As Integer, ByRef strMessage As String) As String()
            Dim results() As Object = Me.Invoke("StatusVoiceSMS", New Object() {strUsername, strPassword, intVoiceSMSID, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StatusVoiceSMSAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intVoiceSMSID As Integer, ByVal strMessage As String)
            Me.StatusVoiceSMSAsync(strUsername, strPassword, intVoiceSMSID, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StatusVoiceSMSAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intVoiceSMSID As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.StatusVoiceSMSOperationCompleted Is Nothing) Then
                Me.StatusVoiceSMSOperationCompleted = AddressOf Me.OnStatusVoiceSMSOperationCompleted
            End If
            Me.InvokeAsync("StatusVoiceSMS", New Object() {strUsername, strPassword, intVoiceSMSID, strMessage}, Me.StatusVoiceSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnStatusVoiceSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.StatusVoiceSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StatusVoiceSMSCompleted(Me, New StatusVoiceSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StatusVoiceSMS_Details", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StatusVoiceSMS_Details(ByVal strUsername As String, ByVal strPassword As String, ByVal intVoiceSMSID As Integer, ByVal intPageNo As Integer, ByRef strMessage As String) As <System.Xml.Serialization.XmlArrayItemAttribute(IsNullable:=false)> STC_Status()
            Dim results() As Object = Me.Invoke("StatusVoiceSMS_Details", New Object() {strUsername, strPassword, intVoiceSMSID, intPageNo, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),STC_Status())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StatusVoiceSMS_DetailsAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intVoiceSMSID As Integer, ByVal intPageNo As Integer, ByVal strMessage As String)
            Me.StatusVoiceSMS_DetailsAsync(strUsername, strPassword, intVoiceSMSID, intPageNo, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StatusVoiceSMS_DetailsAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intVoiceSMSID As Integer, ByVal intPageNo As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.StatusVoiceSMS_DetailsOperationCompleted Is Nothing) Then
                Me.StatusVoiceSMS_DetailsOperationCompleted = AddressOf Me.OnStatusVoiceSMS_DetailsOperationCompleted
            End If
            Me.InvokeAsync("StatusVoiceSMS_Details", New Object() {strUsername, strPassword, intVoiceSMSID, intPageNo, strMessage}, Me.StatusVoiceSMS_DetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnStatusVoiceSMS_DetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.StatusVoiceSMS_DetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StatusVoiceSMS_DetailsCompleted(Me, New StatusVoiceSMS_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRemainVoiceCredit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRemainVoiceCredit(ByVal strUsername As String, ByVal strPassword As String, ByRef strMessage As String) As Double
            Dim results() As Object = Me.Invoke("GetRemainVoiceCredit", New Object() {strUsername, strPassword, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRemainVoiceCreditAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strMessage As String)
            Me.GetRemainVoiceCreditAsync(strUsername, strPassword, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRemainVoiceCreditAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strMessage As String, ByVal userState As Object)
            If (Me.GetRemainVoiceCreditOperationCompleted Is Nothing) Then
                Me.GetRemainVoiceCreditOperationCompleted = AddressOf Me.OnGetRemainVoiceCreditOperationCompleted
            End If
            Me.InvokeAsync("GetRemainVoiceCredit", New Object() {strUsername, strPassword, strMessage}, Me.GetRemainVoiceCreditOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRemainVoiceCreditOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRemainVoiceCreditCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRemainVoiceCreditCompleted(Me, New GetRemainVoiceCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendPollVoiceSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendPollVoiceSMS(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal arrAnswers() As String, ByVal repeatTotal As Integer, ByRef strMessage As String) As Integer
            Dim results() As Object = Me.Invoke("SendPollVoiceSMS", New Object() {strUsername, strPassword, strName, arrDest, intVoiceID, arrAnswers, repeatTotal, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendPollVoiceSMSAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal arrAnswers() As String, ByVal repeatTotal As Integer, ByVal strMessage As String)
            Me.SendPollVoiceSMSAsync(strUsername, strPassword, strName, arrDest, intVoiceID, arrAnswers, repeatTotal, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendPollVoiceSMSAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal arrAnswers() As String, ByVal repeatTotal As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.SendPollVoiceSMSOperationCompleted Is Nothing) Then
                Me.SendPollVoiceSMSOperationCompleted = AddressOf Me.OnSendPollVoiceSMSOperationCompleted
            End If
            Me.InvokeAsync("SendPollVoiceSMS", New Object() {strUsername, strPassword, strName, arrDest, intVoiceID, arrAnswers, repeatTotal, strMessage}, Me.SendPollVoiceSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendPollVoiceSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendPollVoiceSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendPollVoiceSMSCompleted(Me, New SendPollVoiceSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StatusPollVoiceSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StatusPollVoiceSMS(ByVal strUsername As String, ByVal strPassword As String, ByVal intPollVoiceSMSID As Integer, ByRef strMessage As String) As String
            Dim results() As Object = Me.Invoke("StatusPollVoiceSMS", New Object() {strUsername, strPassword, intPollVoiceSMSID, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub StatusPollVoiceSMSAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intPollVoiceSMSID As Integer, ByVal strMessage As String)
            Me.StatusPollVoiceSMSAsync(strUsername, strPassword, intPollVoiceSMSID, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StatusPollVoiceSMSAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intPollVoiceSMSID As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.StatusPollVoiceSMSOperationCompleted Is Nothing) Then
                Me.StatusPollVoiceSMSOperationCompleted = AddressOf Me.OnStatusPollVoiceSMSOperationCompleted
            End If
            Me.InvokeAsync("StatusPollVoiceSMS", New Object() {strUsername, strPassword, intPollVoiceSMSID, strMessage}, Me.StatusPollVoiceSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnStatusPollVoiceSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.StatusPollVoiceSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StatusPollVoiceSMSCompleted(Me, New StatusPollVoiceSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMixedVoiceSMS_Synch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendMixedVoiceSMS_Synch(ByVal strUsername As String, ByVal strPassword As String, ByVal intUid As Integer, ByVal strToken As String, ByVal strName As String, ByVal arrDest() As Object, ByVal arrRecords() As Object, ByVal arrNumbers() As Object, ByVal strSayMathod As String, ByRef strMessage As String) As Integer
            Dim results() As Object = Me.Invoke("SendMixedVoiceSMS_Synch", New Object() {strUsername, strPassword, intUid, strToken, strName, arrDest, arrRecords, arrNumbers, strSayMathod, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendMixedVoiceSMS_SynchAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intUid As Integer, ByVal strToken As String, ByVal strName As String, ByVal arrDest() As Object, ByVal arrRecords() As Object, ByVal arrNumbers() As Object, ByVal strSayMathod As String, ByVal strMessage As String)
            Me.SendMixedVoiceSMS_SynchAsync(strUsername, strPassword, intUid, strToken, strName, arrDest, arrRecords, arrNumbers, strSayMathod, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMixedVoiceSMS_SynchAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intUid As Integer, ByVal strToken As String, ByVal strName As String, ByVal arrDest() As Object, ByVal arrRecords() As Object, ByVal arrNumbers() As Object, ByVal strSayMathod As String, ByVal strMessage As String, ByVal userState As Object)
            If (Me.SendMixedVoiceSMS_SynchOperationCompleted Is Nothing) Then
                Me.SendMixedVoiceSMS_SynchOperationCompleted = AddressOf Me.OnSendMixedVoiceSMS_SynchOperationCompleted
            End If
            Me.InvokeAsync("SendMixedVoiceSMS_Synch", New Object() {strUsername, strPassword, intUid, strToken, strName, arrDest, arrRecords, arrNumbers, strSayMathod, strMessage}, Me.SendMixedVoiceSMS_SynchOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendMixedVoiceSMS_SynchOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendMixedVoiceSMS_SynchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendMixedVoiceSMS_SynchCompleted(Me, New SendMixedVoiceSMS_SynchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoiceSMS_Mehr", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendVoiceSMS_Mehr(ByVal strUsername As String, ByVal strPassword As String, ByVal intUid As Integer, ByVal strToken As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByRef strMessage As String) As Integer
            Dim results() As Object = Me.Invoke("SendVoiceSMS_Mehr", New Object() {strUsername, strPassword, intUid, strToken, strName, arrDest, intVoiceID, repeatTotal, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendVoiceSMS_MehrAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intUid As Integer, ByVal strToken As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByVal strMessage As String)
            Me.SendVoiceSMS_MehrAsync(strUsername, strPassword, intUid, strToken, strName, arrDest, intVoiceID, repeatTotal, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendVoiceSMS_MehrAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intUid As Integer, ByVal strToken As String, ByVal strName As String, ByVal arrDest() As String, ByVal intVoiceID As Integer, ByVal repeatTotal As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.SendVoiceSMS_MehrOperationCompleted Is Nothing) Then
                Me.SendVoiceSMS_MehrOperationCompleted = AddressOf Me.OnSendVoiceSMS_MehrOperationCompleted
            End If
            Me.InvokeAsync("SendVoiceSMS_Mehr", New Object() {strUsername, strPassword, intUid, strToken, strName, arrDest, intVoiceID, repeatTotal, strMessage}, Me.SendVoiceSMS_MehrOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendVoiceSMS_MehrOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendVoiceSMS_MehrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendVoiceSMS_MehrCompleted(Me, New SendVoiceSMS_MehrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RefundWarrantyCredit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RefundWarrantyCredit(ByVal strUsername As String, ByVal strPassword As String, ByVal intVoiceSMSID As Integer, ByRef strMessage As String) As Integer()
            Dim results() As Object = Me.Invoke("RefundWarrantyCredit", New Object() {strUsername, strPassword, intVoiceSMSID, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RefundWarrantyCreditAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intVoiceSMSID As Integer, ByVal strMessage As String)
            Me.RefundWarrantyCreditAsync(strUsername, strPassword, intVoiceSMSID, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RefundWarrantyCreditAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal intVoiceSMSID As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.RefundWarrantyCreditOperationCompleted Is Nothing) Then
                Me.RefundWarrantyCreditOperationCompleted = AddressOf Me.OnRefundWarrantyCreditOperationCompleted
            End If
            Me.InvokeAsync("RefundWarrantyCredit", New Object() {strUsername, strPassword, intVoiceSMSID, strMessage}, Me.RefundWarrantyCreditOperationCompleted, userState)
        End Sub
        
        Private Sub OnRefundWarrantyCreditOperationCompleted(ByVal arg As Object)
            If (Not (Me.RefundWarrantyCreditCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RefundWarrantyCreditCompleted(Me, New RefundWarrantyCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PaymentVoiceBill", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PaymentVoiceBill(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal arrBillID() As String, ByVal arrPayID() As String, ByVal arrAmount() As String, ByVal repeatTotal As Integer, ByRef strMessage As String) As Integer
            Dim results() As Object = Me.Invoke("PaymentVoiceBill", New Object() {strUsername, strPassword, strName, arrDest, arrBillID, arrPayID, arrAmount, repeatTotal, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PaymentVoiceBillAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal arrBillID() As String, ByVal arrPayID() As String, ByVal arrAmount() As String, ByVal repeatTotal As Integer, ByVal strMessage As String)
            Me.PaymentVoiceBillAsync(strUsername, strPassword, strName, arrDest, arrBillID, arrPayID, arrAmount, repeatTotal, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PaymentVoiceBillAsync(ByVal strUsername As String, ByVal strPassword As String, ByVal strName As String, ByVal arrDest() As String, ByVal arrBillID() As String, ByVal arrPayID() As String, ByVal arrAmount() As String, ByVal repeatTotal As Integer, ByVal strMessage As String, ByVal userState As Object)
            If (Me.PaymentVoiceBillOperationCompleted Is Nothing) Then
                Me.PaymentVoiceBillOperationCompleted = AddressOf Me.OnPaymentVoiceBillOperationCompleted
            End If
            Me.InvokeAsync("PaymentVoiceBill", New Object() {strUsername, strPassword, strName, arrDest, arrBillID, arrPayID, arrAmount, repeatTotal, strMessage}, Me.PaymentVoiceBillOperationCompleted, userState)
        End Sub
        
        Private Sub OnPaymentVoiceBillOperationCompleted(ByVal arg As Object)
            If (Not (Me.PaymentVoiceBillCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PaymentVoiceBillCompleted(Me, New PaymentVoiceBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DecodeText", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DecodeText(ByVal strText As String) As String
            Dim results() As Object = Me.Invoke("DecodeText", New Object() {strText})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DecodeTextAsync(ByVal strText As String)
            Me.DecodeTextAsync(strText, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DecodeTextAsync(ByVal strText As String, ByVal userState As Object)
            If (Me.DecodeTextOperationCompleted Is Nothing) Then
                Me.DecodeTextOperationCompleted = AddressOf Me.OnDecodeTextOperationCompleted
            End If
            Me.InvokeAsync("DecodeText", New Object() {strText}, Me.DecodeTextOperationCompleted, userState)
        End Sub
        
        Private Sub OnDecodeTextOperationCompleted(ByVal arg As Object)
            If (Not (Me.DecodeTextCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DecodeTextCompleted(Me, New DecodeTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class STC_Status
        
        Private receiverNumberField As String
        
        Private statusField As String
        
        Private answerDurationField As Integer
        
        Private responseField As String
        
        '''<remarks/>
        Public Property ReceiverNumber() As String
            Get
                Return Me.receiverNumberField
            End Get
            Set
                Me.receiverNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As String
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AnswerDuration() As Integer
            Get
                Return Me.answerDurationField
            End Get
            Set
                Me.answerDurationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Response() As String
            Get
                Return Me.responseField
            End Get
            Set
                Me.responseField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub AuthenticationCompletedEventHandler(ByVal sender As Object, ByVal e As AuthenticationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthenticationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub UploadVoiceFileCompletedEventHandler(ByVal sender As Object, ByVal e As UploadVoiceFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadVoiceFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub InquiryFileNameCompletedEventHandler(ByVal sender As Object, ByVal e As InquiryFileNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InquiryFileNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub SendVoiceSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendVoiceSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendVoiceSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub SendVoiceSMS_MinuteCompletedEventHandler(ByVal sender As Object, ByVal e As SendVoiceSMS_MinuteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendVoiceSMS_MinuteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub SendVoiceSMS_BulkCompletedEventHandler(ByVal sender As Object, ByVal e As SendVoiceSMS_BulkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendVoiceSMS_BulkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub StatusVoiceSMSCompletedEventHandler(ByVal sender As Object, ByVal e As StatusVoiceSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StatusVoiceSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub StatusVoiceSMS_DetailsCompletedEventHandler(ByVal sender As Object, ByVal e As StatusVoiceSMS_DetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StatusVoiceSMS_DetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As STC_Status()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),STC_Status())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub GetRemainVoiceCreditCompletedEventHandler(ByVal sender As Object, ByVal e As GetRemainVoiceCreditCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRemainVoiceCreditCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub SendPollVoiceSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendPollVoiceSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendPollVoiceSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub StatusPollVoiceSMSCompletedEventHandler(ByVal sender As Object, ByVal e As StatusPollVoiceSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StatusPollVoiceSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub SendMixedVoiceSMS_SynchCompletedEventHandler(ByVal sender As Object, ByVal e As SendMixedVoiceSMS_SynchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendMixedVoiceSMS_SynchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub SendVoiceSMS_MehrCompletedEventHandler(ByVal sender As Object, ByVal e As SendVoiceSMS_MehrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendVoiceSMS_MehrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub RefundWarrantyCreditCompletedEventHandler(ByVal sender As Object, ByVal e As RefundWarrantyCreditCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RefundWarrantyCreditCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub PaymentVoiceBillCompletedEventHandler(ByVal sender As Object, ByVal e As PaymentVoiceBillCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PaymentVoiceBillCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")>  _
    Public Delegate Sub DecodeTextCompletedEventHandler(ByVal sender As Object, ByVal e As DecodeTextCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DecodeTextCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
